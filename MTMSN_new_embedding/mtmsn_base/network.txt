name: module.bert.embeddings.word_embeddings.weight, size: torch.Size([30522, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.embeddings.position_embeddings.weight, size: torch.Size([512, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.embeddings.token_type_embeddings.weight, size: torch.Size([2, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.embeddings.type_embeddings.weight, size: torch.Size([20, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.embeddings.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.embeddings.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.0.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.1.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.2.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.3.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.4.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.5.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.6.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.7.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.8.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.9.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.10.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.self.query.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.self.query.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.self.key.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.self.key.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.self.value.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.self.value.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.output.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.attention.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.intermediate.dense.weight, size: torch.Size([3072, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.intermediate.dense.bias, size: torch.Size([3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.output.dense.weight, size: torch.Size([768, 3072]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.output.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.output.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.encoder.layer.11.output.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module.bert.pooler.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module.bert.pooler.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._passage_affine.weight, size: torch.Size([1, 768]), dtype: torch.float32, requires_grad: True
name: module._passage_affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._question_affine.weight, size: torch.Size([1, 768]), dtype: torch.float32, requires_grad: True
name: module._question_affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._answer_ability_predictor.dense.weight, size: torch.Size([768, 2304]), dtype: torch.float32, requires_grad: True
name: module._answer_ability_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._answer_ability_predictor.affine.weight, size: torch.Size([4, 768]), dtype: torch.float32, requires_grad: True
name: module._answer_ability_predictor.affine.bias, size: torch.Size([4]), dtype: torch.float32, requires_grad: True
name: module._answer_ability_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._answer_ability_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._base_predictor.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module._base_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._base_predictor.affine.weight, size: torch.Size([1, 768]), dtype: torch.float32, requires_grad: True
name: module._base_predictor.affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._base_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._base_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._start_predictor.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module._start_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._start_predictor.affine.weight, size: torch.Size([1, 768]), dtype: torch.float32, requires_grad: True
name: module._start_predictor.affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._start_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._start_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._end_predictor.dense.weight, size: torch.Size([768, 768]), dtype: torch.float32, requires_grad: True
name: module._end_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._end_predictor.affine.weight, size: torch.Size([1, 768]), dtype: torch.float32, requires_grad: True
name: module._end_predictor.affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._end_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._end_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._start_affine.weight, size: torch.Size([1, 3072]), dtype: torch.float32, requires_grad: True
name: module._start_affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._end_affine.weight, size: torch.Size([1, 3072]), dtype: torch.float32, requires_grad: True
name: module._end_affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._span_number_predictor.dense.weight, size: torch.Size([768, 2304]), dtype: torch.float32, requires_grad: True
name: module._span_number_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._span_number_predictor.affine.weight, size: torch.Size([8, 768]), dtype: torch.float32, requires_grad: True
name: module._span_number_predictor.affine.bias, size: torch.Size([8]), dtype: torch.float32, requires_grad: True
name: module._span_number_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._span_number_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_sign_predictor.dense.weight, size: torch.Size([768, 3840]), dtype: torch.float32, requires_grad: True
name: module._number_sign_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_sign_predictor.affine.weight, size: torch.Size([3, 768]), dtype: torch.float32, requires_grad: True
name: module._number_sign_predictor.affine.bias, size: torch.Size([3]), dtype: torch.float32, requires_grad: True
name: module._number_sign_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_sign_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._sign_embeddings.weight, size: torch.Size([3, 1536]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_affine.weight, size: torch.Size([1, 1536]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_predictor.dense.weight, size: torch.Size([768, 3840]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_predictor.affine.weight, size: torch.Size([1, 768]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_predictor.affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._sign_rerank_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_count_affine.weight, size: torch.Size([1, 1536]), dtype: torch.float32, requires_grad: True
name: module._number_count_affine.bias, size: torch.Size([1]), dtype: torch.float32, requires_grad: True
name: module._number_count_predictor.dense.weight, size: torch.Size([768, 3840]), dtype: torch.float32, requires_grad: True
name: module._number_count_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_count_predictor.affine.weight, size: torch.Size([10, 768]), dtype: torch.float32, requires_grad: True
name: module._number_count_predictor.affine.bias, size: torch.Size([10]), dtype: torch.float32, requires_grad: True
name: module._number_count_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_count_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_negation_predictor.dense.weight, size: torch.Size([768, 3840]), dtype: torch.float32, requires_grad: True
name: module._number_negation_predictor.dense.bias, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_negation_predictor.affine.weight, size: torch.Size([2, 768]), dtype: torch.float32, requires_grad: True
name: module._number_negation_predictor.affine.bias, size: torch.Size([2]), dtype: torch.float32, requires_grad: True
name: module._number_negation_predictor.LayerNorm.gamma, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
name: module._number_negation_predictor.LayerNorm.beta, size: torch.Size([768]), dtype: torch.float32, requires_grad: True
Total trainable parameters: 126662437
Total parameters: 126662437
